Resources:

  SecretsManagerRole:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - "rds.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Description: "Use for RDS Proxy"
        ManagedPolicyArns:
          - !Ref SecretsManagerManagedPolicy
        Path: /
        RoleName: RDS-p-role 

  SecretsManagerManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Get values from Secrets Manager"
      ManagedPolicyName: RDS-policy-for-access-sm
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: VisualEditor0
            Effect: Allow
            Action:
            - secretsmanager:GetRandomPassword
            - secretsmanager:CreateSecret
            - secretsmanager:ListSecrets
            Resource: "*"
          - Sid: VisualEditor1
            Effect: Allow
            Action: secretsmanager:*
            Resource:
              - Fn::ImportValue: MySecretid

Outputs:
  rolearn:
    Value: !GetAtt SecretsManagerRole.Arn
    Description: Role ARN for RDS Proxy can access Secret Manager 
    Export:
      Name: "iamArn"

            
          

